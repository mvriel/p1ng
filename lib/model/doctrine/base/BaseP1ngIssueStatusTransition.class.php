<?php

/**
 * BaseP1ngIssueStatusTransition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $from_id
 * @property integer $to_id
 * @property P1ngIssueStatus $From
 * @property P1ngIssueStatus $To
 * 
 * @method string                    getName()    Returns the current record's "name" value
 * @method integer                   getFromId()  Returns the current record's "from_id" value
 * @method integer                   getToId()    Returns the current record's "to_id" value
 * @method P1ngIssueStatus           getFrom()    Returns the current record's "From" value
 * @method P1ngIssueStatus           getTo()      Returns the current record's "To" value
 * @method P1ngIssueStatusTransition setName()    Sets the current record's "name" value
 * @method P1ngIssueStatusTransition setFromId()  Sets the current record's "from_id" value
 * @method P1ngIssueStatusTransition setToId()    Sets the current record's "to_id" value
 * @method P1ngIssueStatusTransition setFrom()    Sets the current record's "From" value
 * @method P1ngIssueStatusTransition setTo()      Sets the current record's "To" value
 * 
 * @package    p1ng
 * @subpackage model
 * @author     Mike van Riel <mike.vanriel@naenius.com>
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
abstract class BaseP1ngIssueStatusTransition extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('p1ng_issue_status_transition');
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('from_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('to_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('P1ngIssueStatus as From', array(
             'local' => 'from_id',
             'foreign' => 'id'));

        $this->hasOne('P1ngIssueStatus as To', array(
             'local' => 'to_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}