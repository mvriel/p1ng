CREATE TABLE p1ng_customer (id BIGINT AUTO_INCREMENT, code VARCHAR(20) NOT NULL UNIQUE, name TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, created_by integer(11), updated_by integer(11), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_issue (id BIGINT AUTO_INCREMENT, p1ng_project_id BIGINT NOT NULL, subject VARCHAR(255) NOT NULL, p1ng_issue_status_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, created_by integer(11), updated_by integer(11), INDEX p1ng_project_id_idx (p1ng_project_id), INDEX p1ng_issue_status_id_idx (p1ng_issue_status_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_issue_custom_field (id BIGINT AUTO_INCREMENT, p1ng_issue_custom_field_definition_id BIGINT, field_name VARCHAR(100), label TEXT, field_values TEXT, default_value TEXT, required TINYINT(1), related_to_model TEXT, related_to_field TEXT, field_options TEXT, field_attributes TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, created_by integer(11), updated_by integer(11), INDEX p1ng_issue_custom_field_definition_id_idx (p1ng_issue_custom_field_definition_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_issue_custom_field_definition (id BIGINT AUTO_INCREMENT, name TEXT, label TEXT, description LONGTEXT, field_type TEXT, widget ENUM('input_text', 'textarea', 'number', 'enum', 'markdown') DEFAULT 'input_text' NOT NULL, validator ENUM('string') DEFAULT 'string', field_options TEXT, field_attributes TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_issue_custom_row (p1ng_issue_id BIGINT, PRIMARY KEY(p1ng_issue_id)) ENGINE = INNODB;
CREATE TABLE p1ng_issue_log (id BIGINT AUTO_INCREMENT, p1ng_issue_id BIGINT NOT NULL, text LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, created_by integer(11), updated_by integer(11), INDEX p1ng_issue_id_idx (p1ng_issue_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_issue_status (id BIGINT AUTO_INCREMENT, name TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_issue_status_transition (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, p1ng_workflow_id BIGINT NOT NULL, from_id BIGINT NOT NULL, to_id BIGINT NOT NULL, expression TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX from_id_idx (from_id), INDEX to_id_idx (to_id), INDEX p1ng_workflow_id_idx (p1ng_workflow_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_project (id BIGINT AUTO_INCREMENT, p1ng_customer_id BIGINT NOT NULL, code VARCHAR(20) NOT NULL UNIQUE, name VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, created_by integer(11), updated_by integer(11), INDEX p1ng_customer_id_idx (p1ng_customer_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_project_group_permission (sf_guard_group_id INT, p1ng_project_id BIGINT, sf_guard_permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(sf_guard_group_id, p1ng_project_id, sf_guard_permission_id)) ENGINE = INNODB;
CREATE TABLE p1ng_project_role (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_project_role_permission (p1ng_project_role_id BIGINT, sf_guard_permission_id INT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX sf_guard_permission_id_idx (sf_guard_permission_id), PRIMARY KEY(p1ng_project_role_id)) ENGINE = INNODB;
CREATE TABLE p1ng_project_role_user (p1ng_project_id BIGINT, p1ng_project_role_id BIGINT, sf_guard_user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, created_by integer(11), updated_by integer(11), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(p1ng_project_id, p1ng_project_role_id, sf_guard_user_id)) ENGINE = INNODB;
CREATE TABLE p1ng_project_user_permission (sf_guard_user_id INT, p1ng_project_id BIGINT, sf_guard_permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(sf_guard_user_id, p1ng_project_id, sf_guard_permission_id)) ENGINE = INNODB;
CREATE TABLE p1ng_row_level_access (id BIGINT AUTO_INCREMENT, sf_guard_user_id INT NOT NULL, sf_guard_permission_id INT NOT NULL, namespace VARCHAR(255) NOT NULL, value VARCHAR(255) NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, created_by integer(11), updated_by integer(11), INDEX sf_guard_user_id_idx (sf_guard_user_id), INDEX sf_guard_permission_id_idx (sf_guard_permission_id), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_settings (id BIGINT AUTO_INCREMENT, namespace TEXT NOT NULL, name TEXT NOT NULL, value TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, created_by integer(11), updated_by integer(11), INDEX created_by_idx (created_by), INDEX updated_by_idx (updated_by), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE p1ng_workflow (id BIGINT AUTO_INCREMENT, p1ng_project_id BIGINT NOT NULL, p1ng_issue_status_id BIGINT NOT NULL, name TEXT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, deleted_at DATETIME, INDEX p1ng_project_id_idx (p1ng_project_id), INDEX p1ng_issue_status_id_idx (p1ng_issue_status_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE p1ng_customer ADD CONSTRAINT p1ng_customer_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_customer ADD CONSTRAINT p1ng_customer_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_issue ADD CONSTRAINT p1ng_issue_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_issue ADD CONSTRAINT p1ng_issue_p1ng_project_id_p1ng_project_id FOREIGN KEY (p1ng_project_id) REFERENCES p1ng_project(id);
ALTER TABLE p1ng_issue ADD CONSTRAINT p1ng_issue_p1ng_issue_status_id_p1ng_issue_status_id FOREIGN KEY (p1ng_issue_status_id) REFERENCES p1ng_issue_status(id);
ALTER TABLE p1ng_issue ADD CONSTRAINT p1ng_issue_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_issue_custom_field ADD CONSTRAINT pppi FOREIGN KEY (p1ng_issue_custom_field_definition_id) REFERENCES p1ng_issue_custom_field_definition(id);
ALTER TABLE p1ng_issue_custom_field ADD CONSTRAINT p1ng_issue_custom_field_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_issue_custom_field ADD CONSTRAINT p1ng_issue_custom_field_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_issue_log ADD CONSTRAINT p1ng_issue_log_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_issue_log ADD CONSTRAINT p1ng_issue_log_p1ng_issue_id_p1ng_issue_id FOREIGN KEY (p1ng_issue_id) REFERENCES p1ng_issue(id);
ALTER TABLE p1ng_issue_log ADD CONSTRAINT p1ng_issue_log_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_issue_status_transition ADD CONSTRAINT p1ng_issue_status_transition_to_id_p1ng_issue_status_id FOREIGN KEY (to_id) REFERENCES p1ng_issue_status(id);
ALTER TABLE p1ng_issue_status_transition ADD CONSTRAINT p1ng_issue_status_transition_p1ng_workflow_id_p1ng_workflow_id FOREIGN KEY (p1ng_workflow_id) REFERENCES p1ng_workflow(id);
ALTER TABLE p1ng_issue_status_transition ADD CONSTRAINT p1ng_issue_status_transition_from_id_p1ng_issue_status_id FOREIGN KEY (from_id) REFERENCES p1ng_issue_status(id);
ALTER TABLE p1ng_project ADD CONSTRAINT p1ng_project_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_project ADD CONSTRAINT p1ng_project_p1ng_customer_id_p1ng_customer_id FOREIGN KEY (p1ng_customer_id) REFERENCES p1ng_customer(id);
ALTER TABLE p1ng_project ADD CONSTRAINT p1ng_project_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_project_group_permission ADD CONSTRAINT pssi_1 FOREIGN KEY (sf_guard_permission_id) REFERENCES sf_guard_permission(id);
ALTER TABLE p1ng_project_group_permission ADD CONSTRAINT pssi FOREIGN KEY (sf_guard_group_id) REFERENCES sf_guard_group(id);
ALTER TABLE p1ng_project_group_permission ADD CONSTRAINT p1ng_project_group_permission_p1ng_project_id_p1ng_project_id FOREIGN KEY (p1ng_project_id) REFERENCES p1ng_project(id);
ALTER TABLE p1ng_project_role_permission ADD CONSTRAINT pssi_2 FOREIGN KEY (sf_guard_permission_id) REFERENCES sf_guard_permission(id);
ALTER TABLE p1ng_project_role_user ADD CONSTRAINT p1ng_project_role_user_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_project_role_user ADD CONSTRAINT p1ng_project_role_user_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_project_role_user ADD CONSTRAINT p1ng_project_role_user_p1ng_project_role_id_p1ng_project_role_id FOREIGN KEY (p1ng_project_role_id) REFERENCES p1ng_project_role(id);
ALTER TABLE p1ng_project_role_user ADD CONSTRAINT p1ng_project_role_user_p1ng_project_id_p1ng_project_id FOREIGN KEY (p1ng_project_id) REFERENCES p1ng_project(id);
ALTER TABLE p1ng_project_role_user ADD CONSTRAINT p1ng_project_role_user_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_project_user_permission ADD CONSTRAINT pssi_3 FOREIGN KEY (sf_guard_permission_id) REFERENCES sf_guard_permission(id);
ALTER TABLE p1ng_project_user_permission ADD CONSTRAINT p1ng_project_user_permission_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_project_user_permission ADD CONSTRAINT p1ng_project_user_permission_p1ng_project_id_p1ng_project_id FOREIGN KEY (p1ng_project_id) REFERENCES p1ng_project(id);
ALTER TABLE p1ng_row_level_access ADD CONSTRAINT pssi_4 FOREIGN KEY (sf_guard_permission_id) REFERENCES sf_guard_permission(id);
ALTER TABLE p1ng_row_level_access ADD CONSTRAINT p1ng_row_level_access_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_row_level_access ADD CONSTRAINT p1ng_row_level_access_sf_guard_user_id_sf_guard_user_id FOREIGN KEY (sf_guard_user_id) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_row_level_access ADD CONSTRAINT p1ng_row_level_access_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_settings ADD CONSTRAINT p1ng_settings_updated_by_sf_guard_user_id FOREIGN KEY (updated_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_settings ADD CONSTRAINT p1ng_settings_created_by_sf_guard_user_id FOREIGN KEY (created_by) REFERENCES sf_guard_user(id);
ALTER TABLE p1ng_workflow ADD CONSTRAINT p1ng_workflow_p1ng_project_id_p1ng_project_id FOREIGN KEY (p1ng_project_id) REFERENCES p1ng_project(id);
ALTER TABLE p1ng_workflow ADD CONSTRAINT p1ng_workflow_p1ng_issue_status_id_p1ng_issue_status_id FOREIGN KEY (p1ng_issue_status_id) REFERENCES p1ng_issue_status(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
